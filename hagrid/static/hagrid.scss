// theme colors
$primary: #FF5053;
$highlight: #F3F2FF;
$accent1: #B2AAFF;
$accent2: #6A5FDB;
$accent3: #261A66;
$accent4: #29114C;
$accent5: #190B2F;
$background: #0F000A;

$green: #5FDD6E;
$yellow: #FFEB50;
$red: $primary;

$gridSize: 48px;
$gridBorderWidth: 2px;
$gridBorderColor: $accent4;
$gridBorder: $gridBorderWidth solid $gridBorderColor;

// $textColor: $highlight;

@font-face {
    font-family: 'pilowlava';
    src: URL(static('/fonts/pilowlava/Fonts/webfonts/Pilowlava-Regular.woff2')) format('woff2');
}

@font-face {
    font-family: 'spacegrotesk';
    src: URL(static('/fonts/space-grotesk-1.1.4/webfont/SpaceGrotesk-Regular.woff2')) format('woff2');
}
@font-face {
    font-family: 'spacegrotesk';
    font-weight: 500;
    src: URL(static('/fonts/space-grotesk-1.1.4/webfont/SpaceGrotesk-SemiBold.woff2')) format('woff2');
}
@font-face {
    font-family: 'spacegrotesk';
    font-weight: bold;
    src: URL(static('/fonts/space-grotesk-1.1.4/webfont/SpaceGrotesk-Bold.woff2')) format('woff2');
}

@font-face {
    font-family: 'space-mono';
    src: URL(static('/fonts/space-mono/SpaceMono-Regular.ttf')) format('truetype');
}
@font-face {
    font-family: 'space-mono';
    font-weight: bold;
    src: URL(static('/fonts/space-mono/SpaceMono-Bold.ttf')) format('truetype');
}


@font-face {
    font-family: 'uncut-sans';
    src: URL(static('/fonts/uncut-sans/Webfonts/UncutSans-Regular.woff2')) format('woff2');
}
@font-face {
    font-family: 'uncut-sans';
    font-weight: bold;
    src: URL(static('/fonts/uncut-sans/Webfonts/UncutSans-Bold.woff2')) format('woff2');
}
@font-face {
    font-family: 'uncut-sans';
    font-weight: 500;
    src: URL(static('/fonts/uncut-sans/Webfonts/UncutSans-Semibold.woff2')) format('woff2');
}

$fontTitle: "Pilowlava", sans-serif;
$fontH1: "Space Grotesk", "spacegrotesk", sans-serif;
$fontBase: "Uncut Sans", "uncut-sans", $fontH1;
$fontMono: "Space Mono", "space-mono", monospace;

body {
  background: $background;
  color: $accent1;
  font-family: $fontBase;
}
a {
  color: $highlight;
  &:hover {
    color: $accent2;
  }
}

h1.title {
  font-family: $fontTitle;
  color: $primary;
  margin-block-start: 1em;
  font-size: 4rem;
  text-align: center;
}

h1 {
  font-family: $fontH1;
  color: $primary;
}
.center {
  text-align: center;
}

h2 {
  font-family: $fontH1;
  color: $highlight;
  margin-block-start: 1em;
}

h3 {
  font-weight: 500;
  font-family: $fontBase;
  margin-block-start: 1em;
}

h4 {
  font-weight: 500;
  font-family: $fontBase;
  margin-block-start: 1em;
}

// The grid-sizer makes sure its content has an exact multiple of gridSize in width
.grid-sizer {
  // display: grid;
  // grid-template-columns: [start] repeat(auto-fit, $gridSize) [end];
}
.grid-sizer > * {
  // grid-column: start / end;
}

.grid-background {
  padding-left: $gridSize;
  padding-top: $gridSize;
  padding-right: $gridSize + $gridBorderWidth;
  padding-bottom: $gridSize + $gridBorderWidth;
  margin-right: -$gridBorderWidth;

  max-width: $gridSize * 23 + $gridBorderWidth;
  margin-inline: auto;

  // now for something ugly, let's build an inline SVG as a data-url so we can
  $s: str-slice(#{$gridSize}, 0, -3);
  $o: str-slice(#{$gridBorderWidth/2}, 0, -3);
  $o2: str-slice(#{$gridBorderWidth}, 0, -3);
  background-image: url(
    "data:image/svg+xml;utf8,"
    + "<svg xmlns='http://www.w3.org/2000/svg' width='#{$s}' height='#{$s}' viewBox='0 0 #{$s} #{$s}'>"
    + "<path fill='none' stroke-width='#{$o2}' stroke='%23#{str-slice(#{$gridBorderColor},2)}' "
    + "d='M #{$s} #{$o} L#{$o} #{$o} L#{$o} #{$s}'/></svg>"
  );
}

.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, $gridSize - $gridBorderWidth);
  gap: $gridBorderWidth;
  padding-left: $gridBorderWidth;
  padding-top: $gridBorderWidth;
}

.grid-box {
  background: $background;
}

.product-availability-tags {
  list-style: none;
  display: grid;
  grid-template-columns: repeat(auto-fit, $gridSize - $gridBorderWidth);
  grid-template-rows: repeat(auto-fit, $gridSize - $gridBorderWidth);
  gap: $gridBorderWidth;
  grid-column: 4 / -1;
  margin: 0;
  padding: 0;

  > li {
    background: $background;
    vertical-align: top;
    height: $gridSize - $gridBorderWidth;
    width: $gridSize - $gridBorderWidth;
    margin: 0;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
}
.product-availability-tag {
  // background: $primary;
  display: inline-flex;
  width: 2.5rem;
  overflow: hidden;
  white-space: nowrap;
  text-align: center;
  font-family: $fontMono;
  font-size: 1rem;
  align-items: center;
  justify-content: center;
  height: 1.5rem;
  color: $background;
  border: 1px solid currentcolor;
  font-weight: normal;

  &.small {
    font-size: 0.7rem;
  }

  // color variations:
  &.red  {
    color: $red;
  }
  &.green {
    // color: $green;
    background: $green;
    border-color: $green;
    color: $background;
  }
  &.yellow  {
    color: $yellow;
  }
  &.gray  {
    color: $accent4;
  }
}

.product {
  grid-template-rows: ($gridSize * 2) - $gridBorderWidth auto;
  gap: $gridBorderWidth;
  margin-bottom: $gridSize;
  min-height: $gridSize * 3;

  > h2 {
    background: $background;
    grid-column: 1 / -6;
    margin: 0;

    padding-inline: 1rem;
    display: flex;
    align-items: center;
    color: $primary;
  }

  .product-image {
    background: $background;
    grid-column: -6 / -1;
    grid-row: 1 / -1;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .product-availabilities {
    margin: 0;
    padding: 0;
    display: grid;
    grid-column: 1 / -6;
    grid-template-columns: [start] repeat(auto-fit, $gridSize - $gridBorderWidth) [end];
    grid-gap: $gridBorderWidth;

    // for sizegroup: fitted/straight or color
    > h3 {
      background: $background;
      grid-column: span 3;

      display: inline-flex;
      align-items: center;
      padding-inline: 1rem;
      font-size: 1.2rem;
      color: $highlight;
      margin: 0;
    }
  }
}


.product-table {
  background: $accent5;
  border: $gridBorder;
  margin-block: 1rem;

  th, td {
    vertical-align: top;
    border: $gridBorder;
    padding: 0.5em;
    min-width: max-content;
  }

  small {
    font-weight: normal;
    color: $accent2;
  }

  th:first-child {
    color: $highlight;
    font-weight: bold;
    font-family: $fontBase;
    font-size: 1.2rem;
  }

  td {
    background: $background;

    input {
      width: 4em;
      display: inline-block;
    }
  }
}

  input, textarea {
    background: transparent;
    border: 1px solid $accent2;
    border-radius: 4px;
    color: $highlight;
  }
  .form-group {
    margin-block: 1rem;
  }

dl.legend {
  font-family: $fontMono;
  color: $highlight;
  padding: 1rem;
  margin-block: 1rem;
  text-align: center;

  dt, dd {
    display: inline-block;
  }
  dd {
    padding-inline: 1rem 2rem;

    &:last-child {
      padding-inline-end: 0;
    }
  }
}

.navbar {
  border: none;
  background: $accent5;
  font-family: $fontH1;

  .navbar-brand {
    font-family: $fontTitle;
    color: $accent1;
  }
  .navbar-nav.right {
    margin-left: auto;
  }
  .navbar-nav.admin {
    .nav-link {
      color: $primary;
    }
  }
}

.count-page {
  display: flex;
  flex-direction: column;
  margin-inline: auto;
  max-width: max-content;

  main {
    margin-block: 2em;
  }

  > footer {
    background: $background;
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 1rem;
    background: $accent4;
    padding: 24px;
    overflow: hidden;
    align-items: flex-start;


    > button {
      grid-column: 2;
    }

    input[type="text"], textarea {
      min-width: 0;
      width: auto;
    }
  }
}

.hagrid-table, .count-table {
  font-family: $fontMono;

  td, th {
    padding: 0.2rem 0.5rem;
  }

  tr:nth-child(2n+1) {
    td, th {
      background: $accent5;
    }
  }
  thead th {
      background: $accent4;
  }
}

.priorities-table {
  td, th {
    border: 2px solid $accent3;
  }

  td.error {
    color: $red;
    font-weight: bold;
  }
}

.count-table {
  width: 100%;
  td, th {
    &:nth-last-child(-n+2) {
      text-align: center;
    }
  }
}

.color-red {
  color: $red;
}
.color-green {
  color: $green;
}
.color-yellow {
  color: $yellow;
}

.table-buttons button {
  background: $accent3;
  border: 1px solid $accent2;
  color: $highlight;
  border-radius: 4px;
  height: 1.4rem;
  width: 1.4rem;
  font-weight: bold;
}

.count-table-old-count code,
.count-table-new-count input {
  display: inline-block;
  font-size: 1.8rem;
  width: 2.5em;
  font-family: $fontMono;
  text-align: center;
  border: 1px solid $accent2;
  border-radius: 4px;
  color: $highlight;
  min-width: 0;
}

.count-table-old-count small {
  display: block;
}

table .count-table-old-count small {
  font-size: 0.7rem;
  margin-top: -0.5em;
  text-align: center;
}

.count-table-new-count input[type=number] {
    -moz-appearance:textfield;
}

.toggle-visibility-checkbox {
  display: none;
  &:not(:checked) + * {
    display: none;
  }
}

.open-status {
  font-family: $fontMono;
  // line-height: 1;
  text-align: center;
  display: flex;
  padding: 1rem 2rem;
  box-sizing: border-box;
  border: $gridBorder;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  // align-self: center;

  b {
    font-size: 2.5rem;
    display: block;
  }
  small {
    font-size: 1.5rem;
  }
  &.open {
    color: $green;
  }
  &.opening {
    color: $yellow;
  }
  &.closed {
    color: $red;
  }
}

.dashboard-row {
  display: flex;
  gap: 4rem;
  align-items: flex-start;
  margin-block: 4rem;

  > * {
    box-sizing: border-box;
    flex: 1 1 0;

    > :first-child {
      margin-top: 0;
    }
  }
}

.availabilities-table {
  td {
    padding: 0;
  }
}

.availability-switch {
  label {
    display: none;
    height: 32px;
    line-height: 32px;
    border-radius: 4px;
    margin: 8px;
    color: $background;
    font-family: $fontBase;
    font-weight: bold;
    text-align: center;
    user-select: none;
    cursor: pointer;

    &.red { background: $red; }
    &.yellow { background: $yellow; }
    &.green { background: $green; }
  }
  input:checked + label {
    display: block;
  }
}

.availability-progress {
  position: relative;
  height: 20px;
  font-size: 0.8rem;
  font-family: $fontBase;
  font-weight: 500;
  border-top: 1px solid $accent4;

  .fill {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    opacity: 0.4;
    background: currentcolor;
    max-width: 100%;
  }
  .count {
    position: absolute;
    left: 4px;
  }
  .initial {
    position: absolute;
    right: 4px;
  }

  &.red{
    color: $red;
  }
  &.green {
    color: $green;
  }
  &.yellow {
    color: $yellow;
  }
}

.hagrid-tooltip {
  position: absolute;
  left: 100%;
  top: 0;
  background: $accent4;
  border: 2px solid $accent2;
  padding: 0.5rem 1rem;
  box-shadow: 0.51rem 0.5rem $background;
  display: none;
  z-index: 1;
  pointer-events: none;
}
.hagrid-has-tooltip {
  position: relative;
  &:hover .hagrid-tooltip {
    display: block;
  }
}
.scores-tooltip-table {
  display: grid;
  grid-template-columns: auto auto;
  gap: 0.5rem 1rem;
}

td .count-config-field {
  display: flex;
  white-space: nowrap;
  align-items: baseline;
  gap: 0.2em;

  > input {
    width: 2.5em;
    text-align: right;
    -moz-appearance:textfield;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
}

// mobile!
@media (max-width: 1023px) {
  h1.title {
    font-size: 3rem;
  }

  .grid-background {
    background-position-x: -$gridSize/2;
    padding-inline: $gridSize/2;
  }
  .product {
    grid-template-rows: $gridSize - $gridBorderWidth auto;
    min-height: $gridSize * 2;

    > h2 {
      grid-column-end: -1;
    }

    .product-image {
      display: none;
    }

    .product-availabilities {
      grid-column-end: -1;

      > h3 {
        grid-column: span 2;
      }
      .product-availability-tags {
        grid-column-start: 3;
      }
    }
  }
  dl.legend {
    display: grid;
    grid-template-columns: max-content max-content;
    gap: 0.2rem;
    text-align: left;
    width: max-content;
    margin-inline: auto;
    align-items: baseline;

    > * {
      margin: 0;
    }
  }

  .count-page {
    margin-inline: -12px;
  }

  .dashboard-row {
    flex-direction: column;
    margin-bottom: 8rem;
  }
}
